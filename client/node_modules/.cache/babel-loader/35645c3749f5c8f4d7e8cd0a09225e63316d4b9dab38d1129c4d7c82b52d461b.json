{"ast":null,"code":"var _jsxFileName = \"/Users/joseph/Desktop/Coding/node-react-server-client-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backEndData, setBackEndData] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      setBackEndData(data);\n    });\n  }, []);\n  function onChange(event) {\n    // console.log(event.target.value)\n\n    const cityName = event.target.value;\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName},uk&APPID=ddb9f31b11067335a281a41f5e57514e`;\n    // console.log(URL)\n\n    fetch(URL).then(data => {\n      // console.log(data)\n      return data.json();\n      // console.log('DEBUG:: ', data.body)\n    }).then(responseData => {\n      console.log('DEBUG:: ', responseData);\n    });\n\n    // fetch(`/weatherInCity/${cityName}`)\n    // .then((response) => {\n    //   console.log(\"FROM BACK END : \", response)\n    // }) \n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"city name\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), typeof backEndData.users === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : backEndData.users.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wOLKM9nbXdnGoet086NM/G8t860=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","backEndData","setBackEndData","fetch","then","response","json","data","onChange","event","cityName","target","value","URL","responseData","console","log","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","users","map","user","i","_c","$RefreshReg$"],"sources":["/Users/joseph/Desktop/Coding/node-react-server-client-app/client/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nfunction App() {\n\n\n  const [backEndData, setBackEndData] = useState([{}])\n\n  useEffect(() => {\n    fetch(\"/api\").then(\n      response => response.json()\n    ).then(\n      data => {\n        setBackEndData(data)\n      }\n    ) \n  }, []) \n\n\n  function onChange(event) {\n    // console.log(event.target.value)\n\n    const cityName = event.target.value\n\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName},uk&APPID=ddb9f31b11067335a281a41f5e57514e`;\n    // console.log(URL)\n    \n    fetch(URL)\n    .then((data) => {\n        // console.log(data)\n        return data.json()\n        // console.log('DEBUG:: ', data.body)\n    })\n    .then((responseData) => {\n        console.log('DEBUG:: ', responseData)\n    \n    })\n\n    // fetch(`/weatherInCity/${cityName}`)\n    // .then((response) => {\n    //   console.log(\"FROM BACK END : \", response)\n    // }) \n  }\n\n  return (\n    <div>\n\n        <input\n          type=\"text\"\n          placeholder=\"city name\"\n          onChange={onChange}\n        />\n\n      {(typeof backEndData.users === 'undefined') ? (\n        <p> Loading ... </p>\n      ): (\n        backEndData.users.map((user, i) => (\n          <p key={i}>{user}</p>\n        ))\n      )}\n      \n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,MAAM,CAAC,CAACC,IAAI,CAChBC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAACF,IAAI,CACJG,IAAI,IAAI;MACNL,cAAc,CAACK,IAAI,CAAC;IACtB,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,SAASC,QAAQA,CAACC,KAAK,EAAE;IACvB;;IAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAEnC,MAAMC,GAAG,GAAG,qDAAqDH,QAAQ,4CAA4C;IACrH;;IAEAP,KAAK,CAACU,GAAG,CAAC,CACTT,IAAI,CAAEG,IAAI,IAAK;MACZ;MACA,OAAOA,IAAI,CAACD,IAAI,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC,CACDF,IAAI,CAAEU,YAAY,IAAK;MACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,YAAY,CAAC;IAEzC,CAAC,CAAC;;IAEF;IACA;IACA;IACA;EACF;EAEA,oBACEhB,OAAA;IAAAmB,QAAA,gBAEInB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBX,QAAQ,EAAEA;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EAEF,OAAOtB,WAAW,CAACuB,KAAK,KAAK,WAAW,gBACxC1B,OAAA;MAAAmB,QAAA,EAAG;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEpBtB,WAAW,CAACuB,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC5B7B,OAAA;MAAAmB,QAAA,EAAYS;IAAI,GAARC,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CACrB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV;AAACvB,EAAA,CA5DQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}